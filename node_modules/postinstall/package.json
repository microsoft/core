{
  "_args": [
    [
      {
        "raw": "postinstall",
        "scope": null,
        "escapedName": "postinstall",
        "name": "postinstall",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\dev\\coredonet"
    ]
  ],
  "_from": "postinstall@latest",
  "_id": "postinstall@0.4.1",
  "_inCache": true,
  "_location": "/postinstall",
  "_nodeVersion": "10.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/postinstall_0.4.1_1531610889109_0.7156713697072752"
  },
  "_npmUser": {
    "name": "kapouer",
    "email": "kapouer@melix.org"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "postinstall",
    "scope": null,
    "escapedName": "postinstall",
    "name": "postinstall",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/postinstall/-/postinstall-0.4.1.tgz",
  "_shasum": "2fd1e02c448e8137f3055f8250aff22513830a6f",
  "_shrinkwrap": null,
  "_spec": "postinstall",
  "_where": "C:\\dev\\coredonet",
  "author": {
    "name": "Jérémy Lal",
    "email": "kapouer@melix.org"
  },
  "bin": {
    "postinstall": "bin/postinstall.js"
  },
  "bugs": {
    "url": "https://github.com/kapouer/postinstall/issues"
  },
  "dependencies": {
    "fs-extra": "^5.0.0",
    "glob": "^7.1.2",
    "minimist": "^1.2.0",
    "resolve-from": "^4.0.0",
    "resolve-pkg": "^1.0.0"
  },
  "description": "Deploy files from modules after npm install",
  "devDependencies": {
    "mocha": "^5.0.0",
    "spawn-please": "^0.3.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-CKASgwJGKpqACebwoSglCC+u/agGFTP+LC7M1iQsz7+7vVgsMKFX7M0EYU6tZhRaVex9mIbfngDysqJM96x5KQ==",
    "shasum": "2fd1e02c448e8137f3055f8250aff22513830a6f",
    "tarball": "https://registry.npmjs.org/postinstall/-/postinstall-0.4.1.tgz",
    "fileCount": 44,
    "unpackedSize": 18928,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbSocJCRA9TVsSAnZWagAAcv0P/jSZZ42S+utiNA9doBZL\nesIJObmtWOevMkoMD0cpIWwOwjtS144SBtCdBsBJsbZEA9eNjKTGgG1Da1AQ\nDqJGLL8bgZKV8vJOuY9OUvrf2jUQG33sJ8a6g+4nN+2wnRp1irE1rfQ8k6rP\nFn0iRsnTdjvXbrDYrPyEsSpwK5LiIphrsT7ePM0K9HdWSpqd/wabwJwFVw/j\nKKmO2lRXXQLOMwGIUbem/WcOBJ1Wey2d3nJCyY1fGWAy8/Dwtx+Hc3FPsRfG\naKnGyadKcoVRDQP2v4Ke0iDdDYUPsO6vM5j+L/kZ+v1cWrV3uSdH1+rK1D0E\nAq/oEriXwUhfd3Z3vv6b+ySIMDWh+aPjIorGmdtb3C7POWDAGrZizj56iq/Q\nK2L3hy19ToK2NZd2iTIK2pgf/nFmul5RA4SD/nkOGq0/z5jQqjbMY37sX9kH\n0YORDAgDAFybr4oOxE9wvIWGXrQPoKZKIftxzKWlx9PRZG9wN0AFgCWULwDE\nM8VTuRw0YE0pH6JNFgyz6UKhOiyko4PHIYn04m3GzofJiPBDdkE9GXU4csDr\nStp5UjHXvBfXSz3tH0OvvSg97LJvMIVmZKCMPQMatkI3JgBLMMf7OKTKY1LI\nakGj7S+kJs6TBRX54cCnTIRoYDmHT/2U3exRhBdiCZU149Mf9GpzD7Hkk6nc\nN6RC\r\n=eDVk\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "707be1f2b6b90927c8cc80bc0a9cbc841d2c110b",
  "homepage": "https://github.com/kapouer/postinstall#readme",
  "keywords": [
    "postinstall",
    "npm",
    "deploy"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "kapouer",
      "email": "kapouer@melix.org"
    }
  ],
  "name": "postinstall",
  "optionalDependencies": {},
  "readme": "postinstall\n===========\n\nTransform files of Node.js modules after installation.\n\nHow\n---\n\nDepend on this package:\n`npm install postinstall --save`\n\nDeclare postinstall script in package.json:\n\n```\n{\n  \"name\": \"mypkg\",\n  \"version\": \"1.0.0\",\n  \"dependencies\": {\n    \"postinstall\": \"*\"\n  },\n  \"scripts\": {\n    \"postinstall\": \"postinstall\"\n  }\n}\n```\n\nFrom there, more dependencies and commands can be added:\n\n```\n{\n  \"dependencies\": {\n    \"jquery\": \"3\",\n    \"postinstall\": \"*\"\n  },\n  \"postinstall\": {\n    \"jquery/dist/jquery.slim.min.js\": \"link public/js/jquery.min.js\",\n    \"jquery/dist/jquery.slim.min.map\": \"link public/js/jquery.min.js.map\"\n  },\n  \"scripts\": {\n    \"postinstall\": \"postinstall\"\n  }\n}\n```\n\nIt is also possible to configure postinstall in another json file:\n\n```\n{\n  \"scripts\": {\n    \"postinstall\": \"postinstall myconfig.json\"\n  }\n}\n```\n\nHere myconfig.json contains:\n```\n\"postinstall\": {\n  \"jquery/dist/jquery.slim.min.js\": \"link public/js/jquery.min.js\",\n  \"jquery/dist/jquery.slim.min.map\": \"link public/js/jquery.min.js.map\"\n}\n```\n\nOptions\n-------\n\n* `--allow`, `-a`  \n  an array of allowed commands. `postinstall -a link -a copy`.  \n  When unset, all commands are allowed. Available since version 0.3.0.\n\n\nSyntax\n------\n\n### Short form\n```\npostinstall: {\n\t\"<module>/<input>\": \"<command> --<option>=<value> <output>\"\n}\n```\n\n### Long form\n```\npostinstall: {\n\t\"<module>/<input>\": {\n\t\t\"command\": \"<command>\",\n\t\t\"output\": \"<output>\",\n\t\t\"<option>\": \"<value>\"\n\t}\n}\n```\n\ninput can be a path, with an optional star in its filename.\n\noutput can be a path, with an optional star in its filename.\n\nThis allows commands to receive multiple files for one output.\n\n### List option\n\nIf a command needs to process files in a specific order, the list of files\ncan be given in the long form option `list`, like this:\n\n```\n\"src/\": {\n\t\"command\": \"concat\",\n\t\"output\": \"dest/bundle.js\",\n\t\"list\": [\"two.js\", \"one.js\"]\n}\n```\n\nThis calls `concat([\"src/two.js\", \"src/one.js\"], \"dest/bundle.js\")`.\n\n### Renaming\n\nIf a star is present in both input and output file names, it is interpreted\nas renaming the input file(s) name(s):\n\n```\n\"postinstall\": {\n  \"jquery/dist/*.slim.min.js\": \"link public/js/*.min.js\"\n}\n```\n\nThis will produce the same inputs/outputs as the first example.\n\n\nCommand\n-------\n\nNew commands can be added to postinstall and they just need to be available\nas `postinstall-<command>` modules exporting a single function:\n\n```\nmodule.exports = function(inputs, output, options) {\n\t// inputs is an array of paths\n\t// output is a path\n\t// options is an object (possibly empty)\n\t// can return promise\n};\n```\n\nBundled commands: link, copy, concat.\n\nSupported commands:\n- zero-config compilers/minifiers: js, css (postinstall-js, postinstall-css)\n- browserify (postinstall-browserify)\n\n\nUsing as a module\n-----------------\n\n`opts` accepts the same options as the cli options and also:\n\n* `cwd`  \n  resolves paths and modules relative to this directory.  \n  Defaults to `process.cwd()`.  \n  Cannot be set from cli. Available since version 0.4.0.\n\n```\nvar postinstall = require('postinstall');\npostinstall.process(config, {\n  allow: ['copy']\n}).then(function() {\n  // done\n}).catch(function(err) {\n  console.error(err);\n});\n```\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kapouer/postinstall.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.4.1"
}
